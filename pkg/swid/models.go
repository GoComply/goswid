// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://standards.iso.org/iso/19770/-2/2015/schema.xsd
package swid

import (
	"encoding/xml"
)

// Element
type SoftwareIdentity struct {
	XMLName xml.Name `xml:SoftwareIdentity`

	Corpus string `xml:"corpus,attr,omitempty"`

	Patch string `xml:"patch,attr,omitempty"`

	Media string `xml:"media,attr,omitempty"`

	Name string `xml:"name,attr"`

	Supplemental string `xml:"supplemental,attr,omitempty"`

	TagId string `xml:"tagId,attr"`

	TagVersion string `xml:"tagVersion,attr,omitempty"`

	Version string `xml:"version,attr,omitempty"`

	VersionScheme string `xml:"versionScheme,attr"`

	XmlLang string `xml:"lang,attr"`
}

// XSD ComplexType declarations

type BaseElement struct {
	XmlLang string `xml:"lang,attr"`
}

type Entity struct {
	Name string `xml:"name,attr"`

	Regid string `xml:"regid,attr,omitempty"`

	Role string `xml:"role,attr"`

	Thumbprint string `xml:"thumbprint,attr,omitempty"`

	XmlLang string `xml:"lang,attr"`

	Meta Meta `xml:"Meta"`
}

type Evidence struct {
	Date string `xml:"date,attr"`

	DeviceId string `xml:"deviceId,attr"`

	XmlLang string `xml:"lang,attr"`
}

type FilesystemItem struct {
	Key string `xml:"key,attr"`

	Location string `xml:"location,attr"`

	Name string `xml:"name,attr"`

	Root string `xml:"root,attr"`

	XmlLang string `xml:"lang,attr"`
}

type Directory struct {
	Key string `xml:"key,attr"`

	Location string `xml:"location,attr"`

	Name string `xml:"name,attr"`

	Root string `xml:"root,attr"`

	XmlLang string `xml:"lang,attr"`
}

type File struct {
	Size string `xml:"size,attr"`

	Version string `xml:"version,attr"`

	Key string `xml:"key,attr"`

	Location string `xml:"location,attr"`

	Name string `xml:"name,attr"`

	Root string `xml:"root,attr"`

	XmlLang string `xml:"lang,attr"`
}

type Process struct {
	Name string `xml:"name,attr"`

	Pid string `xml:"pid,attr"`

	XmlLang string `xml:"lang,attr"`
}

type Resource struct {
	Type string `xml:"type,attr"`

	XmlLang string `xml:"lang,attr"`
}

type ResourceCollection struct {
	XmlLang string `xml:"lang,attr"`
}

type Link struct {
	Artifact string `xml:"artifact,attr,omitempty"`

	Href string `xml:"href,attr"`

	Media string `xml:"media,attr,omitempty"`

	Ownership string `xml:"ownership,attr,omitempty"`

	Rel string `xml:"rel,attr"`

	Type string `xml:"type,attr,omitempty"`

	Use string `xml:"use,attr,omitempty"`

	XmlLang string `xml:"lang,attr"`
}

type Meta struct {
	XmlLang string `xml:"lang,attr"`
}

type SoftwareMeta struct {
	ActivationStatus string `xml:"activationStatus,attr,omitempty"`

	ChannelType string `xml:"channelType,attr,omitempty"`

	ColloquialVersion string `xml:"colloquialVersion,attr,omitempty"`

	Description string `xml:"description,attr,omitempty"`

	Edition string `xml:"edition,attr,omitempty"`

	EntitlementDataRequired string `xml:"entitlementDataRequired,attr,omitempty"`

	EntitlementKey string `xml:"entitlementKey,attr,omitempty"`

	Generator string `xml:"generator,attr,omitempty"`

	PersistentId string `xml:"persistentId,attr,omitempty"`

	Product string `xml:"product,attr,omitempty"`

	ProductFamily string `xml:"productFamily,attr,omitempty"`

	Revision string `xml:"revision,attr,omitempty"`

	Summary string `xml:"summary,attr,omitempty"`

	UnspscCode string `xml:"unspscCode,attr,omitempty"`

	UnspscVersion string `xml:"unspscVersion,attr,omitempty"`

	XmlLang string `xml:"lang,attr"`
}
